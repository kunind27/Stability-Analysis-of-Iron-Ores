# -*- coding: utf-8 -*-
"""MM209_ProgAssign.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vWhRqo39OMg-xnRDZ-GWeCPgHYXj86cX

#**Programming Assignment**
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np 
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(color_codes=True)
# Un-comment it if using the code in Google Colab
#%matplotlib inline

#FeO to Fe
def ph2_1(T): 
    p_h2= 1/(1+np.exp((-12300/8.314/T)+6.65/8.314))
    return p_h2

#Fe3O4 to FeO 
def ph2_2(T): 
    p_h2= 1/(1+np.exp((-64900/8.314/T)+69.25/8.314))
    return p_h2

#Fe3O4 to Fe
def ph2_3(T): 
    p_h2= 1/(1+np.exp((-25450/8.314/T)+ 22.3/8.314))
    return p_h2

T= np.linspace(300,1500,200)

#Calculating Eqm pH2 for each reaction
p_1= ph2_1(T)
p_2= ph2_2(T)
p_3= ph2_3(T)

#Plotting
plt.subplots(figsize=(8,6))
plt.plot(T,p_1, color='mediumblue')
plt.plot(T,p_2, color='lime')
plt.plot(T,p_3, color='red')

plt.xticks(np.arange(300,1501,200))
plt.xlabel('Temperature (K)', fontweight='bold', size=14)
plt.ylabel('$p_{H_2}/(p_{H_2}+p_{H_2O}) = \chi _{H_2}$', size=18)
plt.legend(['FeO to Fe','Fe$_3$O$_4$ to FeO','Fe$_3$O$_4$ to Fe'])
plt.show()

#Stability Diagrams Begin Here!
T_crit = 52600/62.6

T1 = np.linspace(300,T_crit,100)
T2 = np.linspace(T_crit, 1500, 100)

#Calculating Eqm pH2 for each reaction
p_1= ph2_1(T2)
p_2= ph2_2(T2)
p_3= ph2_3(T1)

#Plotting The Main Lines
plt.subplots(figsize=(8,6))
plt.plot(T2,p_1, color='mediumblue')
plt.plot(T2,p_2, color='lime')
plt.plot(T1,p_3, color='red')

#Setting the Text
plt.text(x=600,y=0.4,s='Fe$_3$O$_4$',size=14, fontweight='bold')
plt.text(x = 900, y = 0.9, s='Fe',size=14, fontweight='bold')
plt.text(x=1200, y = 0.4, s='FeO',size=14, fontweight='bold')

#Setting the Graph Axes and Legends
plt.xticks(np.arange(300,1501,200))
plt.legend(['FeO to Fe','Fe$_3$O$_4$ to FeO','Fe$_3$O$_4$ to Fe'])

#Setting the Axis Labels and Graph Titles
plt.xlabel('Temperature (K)', fontweight='bold', size=14)
plt.ylabel('$p_{H_2}/(p_{H_2}+p_{H_2O}) = \chi _{H_2}$', size=18)
plt.title('Fe-O-H Stability Diagram', fontweight='bold',size=14)
plt.show()

print(ph2_1(T_crit),ph2_2(T_crit),ph2_3(T_crit))
